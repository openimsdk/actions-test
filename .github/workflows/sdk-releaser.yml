name: SDK Releaser

on:
  release:
    types: [created]
  # push:
  #   tags:
  #     - "v*"
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      TAG_VERSION: ${{ github.ref_name }}
      PROJECT_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "oracle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;20.0.5594570"

      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          gomobile init

      - name: Build Android AAR
        run: |
          gomobile bind -v -trimpath -ldflags="-s -w" \
            -o ./open_im_sdk.aar -target=android \
            ./open_im_sdk/ ./open_im_sdk_callback/

      - name: Create Android archive
        run: |
          archive_name="${PROJECT_NAME}_${TAG_VERSION}_Android_aar.zip"
          zip $archive_name open_im_sdk.aar
          echo "Created archive: $archive_name"

      # - name: List generated files
      #   run: |
      #     archive_name="${PROJECT_NAME}_${TAG_VERSION}_Android_aar.zip"
      #     echo "Generated Android files:"
      #     ls -la open_im_sdk.aar
      #     ls -la $archive_name
      #     echo "Archive contents:"
      #     unzip -l $archive_name

      - name: Upload Android AAR to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.PROJECT_NAME }}_${{ env.TAG_VERSION }}_Android_aar.zip
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ios:
    runs-on: macos-latest
    env:
      TAG_VERSION: ${{ github.ref_name }}
      PROJECT_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          gomobile init

      - name: Build iOS xcframework
        run: |
          gomobile bind -v -trimpath -ldflags="-s -w" \
            -o ./OpenIMSDK.xcframework -target=ios \
            ./open_im_sdk/ ./open_im_sdk_callback/

      - name: Create iOS archive
        run: |
          archive_name="${PROJECT_NAME}_${TAG_VERSION}_iOS_xcframework.zip"
          zip -r $archive_name OpenIMSDK.xcframework
          echo "Created archive: $archive_name"

      # - name: List generated files
      #   run: |
      #     archive_name="${PROJECT_NAME}_${TAG_VERSION}_iOS_xcframework.zip"
      #     echo "Generated iOS files:"
      #     ls -la OpenIMSDK.xcframework
      #     ls -la $archive_name
      #     echo "Archive contents:"
      #     unzip -l $archive_name

      - name: Upload iOS xcframework to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.PROJECT_NAME }}_${{ env.TAG_VERSION }}_iOS_xcframework.zip
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-wasm:
    runs-on: ubuntu-latest
    env:
      TAG_VERSION: ${{ github.ref_name }}
      PROJECT_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install make and zip
        run: sudo apt-get update && sudo apt-get install -y make zip

      - name: Build WASM
        run: |
          cd wasm/cmd
          make wasm

      - name: Create WASM archive
        run: |
          cd wasm/cmd
          archive_name="${PROJECT_NAME}_${TAG_VERSION}_JS_wasm.zip"
          zip $archive_name openIM.wasm
          echo "Created archive: $archive_name"

      - name: List generated files
        run: |
          cd wasm/cmd
          archive_name="${PROJECT_NAME}_${TAG_VERSION}_JS_wasm.zip"
          echo "Generated WASM files:"
          ls -la openIM.wasm
          ls -la $archive_name
          echo "Archive contents:"
          unzip -l $archive_name

      - name: Upload WASM files to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: wasm/cmd/${{ env.PROJECT_NAME }}_${{ env.TAG_VERSION }}_JS_wasm.zip
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
