name: Release Changelog

on:
  release:
    types: [released]
permissions:
  contents: write
  pull-requests: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Go Changelog Generator
      run: |
        # Run the Go changelog generator, pass the release tag if available
        if [ "${{ github.event.release.tag_name }}" = "latest" ]; then
          go run tools/changelog.go > "${{ github.event.release.tag_name }}-changelog.md"
        else
          go run tools/changelog.go "${{ github.event.release.tag_name }}" > "${{ github.event.release.tag_name }}-changelog.md"
        fi

    - name: Handle changelog files
      run: |
        # Remove the 'v' prefix from the tag name
        TAG_NAME=${{ github.event.release.tag_name }}
        NAME_WITHOUT_V=$(echo "$TAG_NAME" | sed 's/^v//')

        # Create the CHANGELOG directory if it doesn't exist
        mkdir -p CHANGELOG

        # Define the new changelog file path
        NEW_CHANGELOG_PATH="CHANGELOG/CHANGELOG-$NAME_WITHOUT_V.md"

        # Check if the changelog file for the current release already exists
        if [ -f "$NEW_CHANGELOG_PATH" ]; then
          # If the file exists, append the current content to the temporary changelog
          cat "$NEW_CHANGELOG_PATH" >> "${TAG_NAME}-changelog.md"
          # Overwrite the existing changelog with the updated content
          mv "${TAG_NAME}-changelog.md" "$NEW_CHANGELOG_PATH"
        else
          # If it doesn't exist, rename the temp changelog to the new changelog file
          mv "${TAG_NAME}-changelog.md" "$NEW_CHANGELOG_PATH"
        fi

    - name: Clean up
      run: |
        # Remove any temporary files that were created during the process
        rm -f "${{ github.event.release.tag_name }}-changelog.md"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7.0.5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Use the repository token to authenticate
        commit-message: "Update CHANGELOG for release ${{ github.event.release.tag_name }}"  # Commit message for the PR
        title: "Update CHANGELOG for release ${{ github.event.release.tag_name }}"  # Title of the PR
        body: "This PR updates the CHANGELOG files for release ${{ github.event.release.tag_name }}"  # Description of the PR
        base: main 
        delete-branch: true
        labels: changelog  # Add a label to the PR
