name: Create Git Branch Package on Release

on:
  release:
    types: [created]

jobs:
  create-package:
    runs-on: ubuntu-latest
    env:
      TAG_VERSION: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create custom source code packages
        run: |
          PROJECT_NAME="${{ github.event.repository.name }}"
          echo "Project name: $PROJECT_NAME"
          echo "Tag version: ${{ env.TAG_VERSION }}"

          CURRENT_BRANCH=""

          if [ ! -z "${{ github.event.release.target_commitish }}" ]; then
            CURRENT_BRANCH="${{ github.event.release.target_commitish }}"
            echo "Branch from release target_commitish: $CURRENT_BRANCH"
          fi

          if [ -z "$CURRENT_BRANCH" ]; then
            CURRENT_BRANCH=$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "main")
            echo "Branch from git HEAD: $CURRENT_BRANCH"
          fi

          echo "Final branch to use: $CURRENT_BRANCH"

          mkdir -p temp-package

          echo "Creating package from current state..."
          mkdir -p temp-package/$PROJECT_NAME-${{ env.TAG_VERSION }}
          rsync -av --exclude='.git' --exclude='temp-package' . temp-package/$PROJECT_NAME-${{ env.TAG_VERSION }}/

          cd temp-package/$PROJECT_NAME-${{ env.TAG_VERSION }}
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # careate version file
          mkdir -p version
          echo "${{ env.TAG_VERSION }}" > version/version

          echo "Version file content after update:"
          cat version/version

          git add .
          git commit -m "Source code for release ${{ env.TAG_VERSION }}"
          git checkout -b "$CURRENT_BRANCH"

          echo "Final git status in package:"
          git branch -a 2>/dev/null || echo "No git branches found"
          git log --oneline -5 2>/dev/null || echo "No git history found"
          git remote -v 2>/dev/null || echo "No remotes found"

          cd ..

          zip -r ../$PROJECT_NAME-${{ env.TAG_VERSION }}-with-git.zip $PROJECT_NAME-${{ env.TAG_VERSION }}/
          tar -czf ../$PROJECT_NAME-${{ env.TAG_VERSION }}-with-git.tar.gz $PROJECT_NAME-${{ env.TAG_VERSION }}/

          cd ..

          echo "Created files:"
          ls -la $PROJECT_NAME-${{ env.TAG_VERSION }}-with-git.*
          echo "File sizes:"
          du -h $PROJECT_NAME-${{ env.TAG_VERSION }}-with-git.*

      - name: Upload custom source packages to existing release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_VERSION }}
          files: |
            ${{ github.event.repository.name }}-${{ env.TAG_VERSION }}-with-git.zip
            ${{ github.event.repository.name }}-${{ env.TAG_VERSION }}-with-git.tar.gz
          append_body: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
